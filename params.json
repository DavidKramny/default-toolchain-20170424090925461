{
  "name": "Foosbuzz",
  "tagline": "A Raspberry Pi wired Foosball table that uses the Watson IoT Foundation, Cloudant, and Node-RED",
  "body": "### Overview\r\nThis foosball table started out as something equivalent to a teaming project as we brought five people together in Austin, TX to retrofit an existing table with the sensors needed to track goals.  Version 2 of the code in this GitHub repo is a complete revamp and rethinking of that project to improve it's demo quality and appearance.  Feel free to let us know what you add to the app.  This is a very basic example of using Node-RED to work with an MQTT broker and a noSQL database.  \r\n\r\n## Why Node-RED?\r\nThis table was conceived as a demo and nothing is more appealing than a visual interface.  So while there are plenty of wires and flows that could have been improved in raw code, this particular app is meant to visually guide a user through the logic as well.  Node-RED is a great wire framing platform and available on a variety of operating systems.  \r\n\r\n## Technologies\r\n* [Watson IoT Foundation](https://developer.ibm.com/iotfoundation/)\r\n* [Cloudant noSQL](https://cloudant.com/)\r\n* [Node-RED](http://nodered.org/)\r\n* [Express/Node.js](http://expressjs.com/)\r\n* [Passport OAuth](http://passportjs.org/)\r\n* [Twitter](https://apps.twitter.com/)\r\n\r\n### Hardware: Suggested Parts and Tips for Fitting Your Foosball Table\r\nThis automatic page generator is the easiest way to create beautiful pages for all of your projects. Author your page content here [using GitHub Flavored Markdown](https://guides.github.com/features/mastering-markdown/), select a template crafted by a designer, and publish. After your page is generated, you can check out the new `gh-pages` branch locally. If you’re using GitHub Desktop, simply sync your repository and you’ll see the new branch.\r\n\r\n### Designer Templates\r\nWe’ve crafted some handsome templates for you to use. Go ahead and click 'Continue to layouts' to browse through them. You can easily go back to edit your page before publishing. After publishing your page, you can revisit the page generator and switch to another theme. Your Page content will be preserved.\r\n\r\n### Creating pages manually\r\nIf you prefer to not use the automatic generator, push a branch named `gh-pages` to your repository to create a page manually. In addition to supporting regular HTML content, GitHub Pages support Jekyll, a simple, blog aware static site generator. Jekyll makes it easy to create site-wide headers and footers without having to copy them across every page. It also offers intelligent blog support and other advanced templating features.\r\n\r\n### Authors and Contributors\r\nYou can @mention a GitHub username to generate a link to their profile. The resulting `<a>` element will link to the contributor’s GitHub Profile. For example: In 2007, Chris Wanstrath (@defunkt), PJ Hyett (@pjhyett), and Tom Preston-Werner (@mojombo) founded GitHub.\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Check out our [documentation](https://help.github.com/pages) or [contact support](https://github.com/contact) and we’ll help you sort it out.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}